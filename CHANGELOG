CHANGELOG
---------

- 2018/01/30 0.9.0 release.
    - Issue 92: Where's the natto-py documentation?
    - Issue 96: Index out of range error message not being captured by natto-py
    - Issue 99: Node-formatting ignored when using Unidic unless -O is set to empty string
    - Issue 101: Enable -r/--rcfile MeCab option

- 2016/01/31 0.8.0 release.
    - Issue 72: Revamp IPython notebooks for use with Jupyter
    - Issue 73: Better examples for 制約付き解析
    - Issue 78: Dynamically set version and version info for docs as well
    - Issue 83: natto.api.MeCabError: MECAB_NBEST request type is not set
    - Issue 84: Start leveraging the logging library

- 2015/11/07 0.7.0 release.
    - Issue 67: Confirm behavior with Python 3.5
    - Issue 68: Update README with dependencies for dev & testing
    - Issue 69: Read in version string from file

- 2015/05/02 0.6.0 release.
    - Issue 34: Add support for feature constraint parsing 

- 2015/04/18 0.5.1 release.
    - Issue 48: Object destructor for MeCab dumps core in 0.5.0

- 2015/04/17 0.5.0 release.
    - Issue 35: Use new Model- and Lattice-based C APIs internally
    - Issue 36: Make refs to MeCab and Tagger consistent in docs
    - Issue 37: Partial parsing and handling of tokens
    - Issue 38: Downloads and license badges for README.md & API docs

- 2015/03/31 0.4.0 release.
    - Issue 21: Cleaned up Lattice-related API call.
    - Issue 23: Implemented support for theta option on Lattice.
    - Issue 25: Enhanced tokenization to remove whitespace for partial parse.
    - Issue 26: Updated to docs/index.rst for new MeCab home at github. 

- 2015/03/19 0.3.0 release.
    - Added morpheme boundary constraint parsing.
    - Minor corrections to docs/index.rst formatting. 

- 2015/03/19 0.3.0 release.
    - Pulled.

- 2015/02/22 0.2.1 release.
    - Enhancement for Issue 11: Debugging should use a kwarg. 
    - On-going improvements and clarifications to natto-py documentation.

- 2015/02/22 0.2.0 release.
    - Pulled.

- 2015/01/02: 0.1.0 release.
    - Issue 9: Refactored Python 23 support logic. 
    - On-going improvements and clarifications to natto-py documentation.

- 2014/12/31: 0.0.9 release.
    - MeCab: libpath attribute returns absolute path to MeCab library.
    - DictionaryInfo: filepath attribute returns absolute path to dictionary.
    - Improvements and clarifications to natto-py documentation.

- 2014/12/02: 0.0.8 release.
    - Issue 10: now returning a Generator instead of an array when parsing into
      nodes.
    - Cleaning up the README.rst and comments a bit.

- 2014/11/24: 0.0.7 release.
    - Issue 7: reversing decision in Issue #5: input/output in Python 2
      is a string in the encoding of the mecab lib; while in Python 3,
      both input/output will be in Unicode.
    - Minor refactoring to tighten up attribute visibility in MeCab and
      DictionaryInfo
    - Now testing on Ubuntu 14 (32-bit) as well.

- 2014/11/21: 0.0.6 release.
    - Issue #5: All input/output in Unicode; Python 2.7 users take heed.
    - Issue #7: MeCabEnv now uses Windows Registry to discover lib path.

- 2014/11/08: 0.0.5 release.
    - Issue #4: adding lib to natto.mecab.MeCab.
    - Issue #6: adding __del__ to natto.mecab.MeCab.

- 2014/11/08: 0.0.4 release.
    - Minor cosmetic fixes.

- 2014/11/08: 0.0.3 release.
    - Upgrading to beta status
    - String-Unicode conversion to support Python 2 and 3, keeping to principal
      of least surprise with regards to behavior of strings
    - Supporting Python 3.4
    - Supporting Python 3.3
    - Supporting Python 3.2
    - Supporting Python 2.7
    - Node-formatting for node parsing
    - Automagic defaulting for MeCab library path and charset, but allowing for
      overriding with MECAB_PATH and MECAB_CHARSET
    - Tested on Windows XP (32-bit) and Windows 7 (64-bit)
    - Tested on Mac OS Yosemite (64-bit)
    - Tested on FreeBSD 10 (32-bit)

- 2014/10/26: 0.0.2 release.
    - work in progress

- 2014/10/24: Project inception, initial archiving on Bitbucket.
    - Initial archiving 
    - natto-py is to provide an easy-to-use Python binding with MeCab
